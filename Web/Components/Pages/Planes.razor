@page "/planes"
@using API.Clients;
@using DTOs;
@inject NavigationManager NavigationManager
<h3>Planes</h3>

@if (!string.IsNullOrEmpty(mensajeError))
{
    <div class="alert alert-danger">@mensajeError</div>
}
@if(planes==null){
    <p>Cargando planes</p>
}
else if(!planes.Any()){
    <p>No hay planes.</p>
}
else{
    <button class="btn btn-success mb-3" @onclick="NuevoPlan">Nuevo Plan</button>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Fecha Inicio</th>
                <th>Fecha Fin</th>
                <th>Descripcion</th>
                <th>Fecha alta</th>
                <TH>Acciones</TH>
            </tr>
        </thead>
        <tbody>
            @foreach (var plan in planes)
            {
                <tr>
                    <td>@plan.Id</td>
                    <td>@plan.Nombre</td>
                    <td>@plan.FechaInicio</td>
                    <td>@plan.FechaFin</td>
                    <td>@plan.Descripcion</td>
                    <td>@plan.FechaAlta</td>
                    <td>
                        <button class="btn btn-primary btn-sm me-1" @onclick="() => EditarPlan(plan.Id)">Editar</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => EliminarPlan(plan.Id)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>}
@code {
    private string mensajeError;
    List<PlanDTO> planes;

    protected override async Task OnInitializedAsync()
    {
        var lista = await PlanApiClient.GetAllAsync();
        planes = lista.ToList();
    }
    private void NuevoPlan(){
        NavigationManager.NavigateTo("/planes/create");
    }
    private void EditarPlan(int id)
    {
        NavigationManager.NavigateTo($"/planes/update/{id}");
    }
    private async Task EliminarPlan(int id)
    {
        try
        {
            await PlanApiClient.DeleteAsync(id);
            planes = planes.Where(p => p.Id != id).ToList();
        }
        catch(Exception ex)
        {
            mensajeError = $"Error al eliminar el plan :{ex.Message}";
        }
    }
}
