@page "/planes/create"
@using DTOs;
@using API.Clients;
@inject NavigationManager NavigationManager
@if (!string.IsNullOrEmpty(mensajeError))
{
    <div class="alert alert-danger">@mensajeError</div>
}
<h3>Crear plan</h3>
<EditForm Model="nuevoPlan" OnValidSubmit="GuardarPlan">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="mb-3">
        <label>Nombre</label>
        <InputText class="form-control" @bind-Value="nuevoPlan.Nombre" />
    </div>

    <div class="mb-3">
        <label>Fecha Inicio</label>
        <InputDate class="form-control" @bind-Value="nuevoPlan.FechaInicio" />
    </div>

    <div class="mb-3">
        <label>Fecha Fin</label>
        <InputDate class="form-control" @bind-Value="nuevoPlan.FechaBaja" />
    </div>

    <div class="mb-3">
        <label>Descripción</label>
        <InputTextArea class="form-control" @bind-Value="nuevoPlan.Descripcion" />
    </div>
    <div class="mb-3">
        <label>Grupo</label>
        <InputSelect class="form-control" @bind-Value="nuevoPlan.GrupoId">
            <option value="">-- Seleccione un grupo --</option>
            @foreach (var grupo in grupos)
            {
                <option value="@grupo.Id">@grupo.Nombre</option>
            }
        </InputSelect>
    </div>
    <button class="btn btn-primary" type="submit">Guardar</button>

</EditForm>
@code {
    private PlanCreateDTO nuevoPlan = new PlanCreateDTO();
    private List<GrupoDTO> grupos = new List<GrupoDTO>();
    private string mensajeError = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            grupos = (await GrupoApiClient.GetAllAsync()).ToList();
        }
        catch (Exception ex)
        {
            mensajeError = $"Error al cargar los grupos: {ex.Message}";
        }
    }
    private async  Task GuardarPlan(){

        try
        {

            nuevoPlan.FechaAlta = DateOnly.FromDateTime(DateTime.Now);
            await PlanApiClient.AddAsync(nuevoPlan);
            NavigationManager.NavigateTo("/planes");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex); 
            mensajeError = $"Error al guardar el plan: {ex.Message}";
           
        }
    }
}
